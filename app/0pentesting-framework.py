#!/usr/bin/env python3
#-*- encoding: UTF-8 -*-

#Program imports
import os, time, logging, subprocess
from tqdm import tqdm

# Colors for text
class color:
    HEADER = '\033[95m'
    IMPORTANT = '\33[35m'
    NOTICE = '\033[33m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    RED = '\033[91m'
    END = '\033[0m'
    UNDERLINE = '\033[4m'
    LOGGING = '\33[34m'
    BOLD = '\u001b[1m'
    BLACKBG = '\u001b[40m'



# loading header for program
print(color.HEADER + """

|        ┏━━━┓╋╋╋╋╋╋╋╋╋╋┏━━━━┓╋╋╋╋┏┓                |
|        ┃┏━┓┃╋╋╋╋╋╋╋╋╋╋┃┏┓┏┓┃╋╋╋┏┛┗┓               |
|        ┃┃┃┃┣━━┳━━┳━┓╋╋┗┛┃┃┣┻━┳━┻┓┏╋┳━┓┏━━┓        |
|        ┃┃┃┃┃┏┓┃┃━┫┏┓┳━━┓┃┃┃┃━┫━━┫┃┣┫┏┓┫┏┓┃        |
|        ┃┗━┛┃┗┛┃┃━┫┃┃┣━━┛┃┃┃┃━╋━━┃┗┫┃┃┃┃┗┛┃        |
|        ┗━━━┫┏━┻━━┻┛┗┛╋╋╋┗┛┗━━┻━━┻━┻┻┛┗┻━┓┃        |
|        ╋╋╋╋┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━┛┃        |
|        ╋╋╋╋┗┛╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┗━━┛        |
""" + color.END + """   
    - From ZeroPenSecurity
    - version 1 - WHITE-SPACE

""")
# Vars for program
logo = color.HEADER + color.BLACKBG + """

|        ┏━━━┓╋╋╋╋╋╋╋╋╋╋┏━━━━┓╋╋╋╋┏┓                |
|        ┃┏━┓┃╋╋╋╋╋╋╋╋╋╋┃┏┓┏┓┃╋╋╋┏┛┗┓               |
|        ┃┃┃┃┣━━┳━━┳━┓╋╋┗┛┃┃┣┻━┳━┻┓┏╋┳━┓┏━━┓        |
|        ┃┃┃┃┃┏┓┃┃━┫┏┓┳━━┓┃┃┃┃━┫━━┫┃┣┫┏┓┫┏┓┃        |
|        ┃┗━┛┃┗┛┃┃━┫┃┃┣━━┛┃┃┃┃━╋━━┃┗┫┃┃┃┃┗┛┃        |
|        ┗━━━┫┏━┻━━┻┛┗┛╋╋╋┗┛┗━━┻━━┻━┻┻┛┗┻━┓┃        |
|        ╋╋╋╋┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━┛┃        |
|        ╋╋╋╋┗┛╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┗━━┛        |
|                    """ + color.END + color.NOTICE + color.BLACKBG + """ᶠʳᵒᵐ""" + color.END + color.WARNING + color.BOLD + color.BLACKBG + """  ᶻᵉʳᵒ ᵖᵉⁿ ˢᵉᶜᵘʳⁱᵗʸ""" + color.END + color.HEADER + color.BLACKBG + """        |""" + color.END + """
    
    - version 1 - """ + color.BLACKBG + color.BOLD + """WHITE-SPACE""" + color.END + """
    - To start type '""" + color.UNDERLINE + color.BLUE + """help""" + color.END + """', enter '""" + color.UNDERLINE + color.GREEN + """interactive-mode""" + color.END + """' for GUI
    - Webserver IP: """ + color.UNDERLINE + color.RED + """http://localhost:43747/""" + color.END + """
"""

# def for program

def clearscr():
    print(logo)
    os.system("clear")

def help_menu():
    print("test menu")

def swsrel_webserver():
    os.system("python3 dist/start_webserver.py 1")
    os.system("python3 dist/start_webserver.py 0")

def interactive_mode():
    os.system("python3 dist/interactive.py")

def stopweb():
    os.system("python3 dist/start_webserver.py 1")

def ckupdate():
    os.system("bash dist/update_mgr.sh")

def cleanuplogs():
    os.system("python3 dist/cleanuplogs.py")

# clear screen before starting program
os.system("clear")

# starting bar to load program
with tqdm(total=2, desc="Starting application...   ", bar_format="{l_bar}{bar} [ time left: {remaining} ]") as pbar:

    os.system("nohup bash dist/update_mgr.sh > logs/updatemgr_debug_log.out")
    time.sleep(1)
    pbar.update(1)
    os.popen("python3 dist/start_webserver.py 0")
    pbar.update(1)
    time.sleep(1)

# program started, running commands
print("Program loaded! One moment please...")
time.sleep(2)
clearscr()
print(logo)
while 1 == 1:
    ccli = input(color.UNDERLINE + color.HEADER + "0penTesting-cli" + color.END + color.NOTICE + "$>  " + color.END)
    if ccli == "help":
        help_menu()
    elif ccli == "interactive-mode":
        interactive_mode()
    elif ccli == "relweb":
        swsrel_webserver()
    elif ccli == "stopweb":
        stop_webserver()
    elif ccli == "ckupdate":
        ckupdate()
    elif ccli == "cleanlogs":
        cleanuplogs()
    elif ccli == "exit":
        os.system("exit")
    elif ccli == "\r" or ccli == "\n" or ccli == "" or ccli == " ":
        pass
    elif ccli == "clear" or ccli == "cls":
        clearscr()
    else:
        print(color.WARNING + "[WARNING]--->  " + color.END + "{}: No such output.".format(ccli))
